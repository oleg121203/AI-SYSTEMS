name: CI Checks
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  repository_dispatch:
    types: [code-committed-in-repo]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout AI-SYSTEMS code
        uses: actions/checkout@v4
        with:
          path: main

      - name: Checkout generated project code (AI-SYSTEMS-REPO)
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/AI-SYSTEMS-REPO
          path: repo
          token: ${{ secrets.GH_PAT_DISPATCH || secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install AI-SYSTEMS Python dependencies
        working-directory: main
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_async.txt
          pip install -r requirements.txt

      - name: Install Generated Project Python dependencies
        working-directory: repo
        run: |
          if [ -f requirements.txt ]; then
            echo "Installing dependencies from repo/requirements.txt..."
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          else
            echo "repo/requirements.txt not found, skipping dependency installation."
          fi

      - name: Run AI-SYSTEMS Python tests
        working-directory: main
        run: |
          pytest tests/

      - name: Run Generated Project Python tests (Unit/Integration)
        working-directory: repo
        run: |
          if [ -d "tests" ] || ls test_*.py > /dev/null 2>&1 || ls *_test.py > /dev/null 2>&1; then
            echo "Running pytest in repo/..."
            pytest tests/ || true
          else
            echo "No unit/integration tests found in repo/, skipping project test execution."
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Playwright Browsers
        working-directory: main
        run: npx playwright install --with-deps

      - name: Install E2E test dependencies
        working-directory: main
        run: |
          if [ -f e2e_tests/requirements.txt ]; then
            pip install -r e2e_tests/requirements.txt
          fi
          pip install pytest-playwright

      - name: Start Generated Application (Example:FastAPI Backend)
        working-directory: repo/project/backend
        run: |
          if [ -f main.py ]; then
            echo "Starting application in background..."
            nohup uvicorn main:app --host 0.0.0.0 --port 8000 > ../../app.log 2>&1 &
            sleep 15
            echo "Application potentially started."
            pgrep -f "uvicorn main:app" || echo "Warning: Application process not found after start attempt."
          else
            echo "Application startup file (e.g., main.py) not found in repo/project/backend. Skipping E2E tests."
            echo "SKIP_E2E=true" >> $GITHUB_ENV
          fi

      - name: Run End-to-End tests
        if: env.SKIP_E2E != 'true'
        working-directory: main
        run: |
          echo "Running E2E tests..."
          export APP_BASE_URL=http://localhost:8000 
          pytest e2e_tests/ || true

      - name: Stop Generated Application
        if: always() && env.SKIP_E2E != 'true'
        run: |
          echo "Attempting to stop application..."
          PID=$(pgrep -f "uvicorn main:app" || pgrep -f "python main.py" || lsof -t -i:8000 || echo "")
          if [ -n "$PID" ]; then
            echo "Stopping application process(es) with PID(s): $PID"
            kill $PID
            sleep 5
          else
            echo "Application process not found or already stopped."
          fi
          echo "--- Application Log (repo/app.log) ---"
          cat repo/app.log || echo "Could not display repo/app.log"
          echo "--- End Application Log ---"

      - name: Install Linters
        run: |
          npm install -g htmlhint stylelint stylelint-config-standard eslint

      - name: Lint HTML files
        working-directory: repo
        run: htmlhint project/**/*.html || true

      - name: Lint CSS files
        working-directory: repo
        run: stylelint "project/**/*.css" --config main/.stylelintrc.json --allow-empty-input || true

      - name: Lint JavaScript files
        working-directory: repo
        run: eslint "project/**/*.js" --config main/.eslintrc.json || true
