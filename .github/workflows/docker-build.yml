name: Docker Build and Push

on:
  push:
    branches: [ main, master ]
    paths:
      - 'ai-systems/**'
      - 'Dockerfile*'
      - 'docker-compose*.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'ai-systems/**'
      - 'Dockerfile*'
      - 'docker-compose*.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short
      
      - name: Build and push Docker images
        uses: docker/bake-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          files: |
            ./docker-compose.yml
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.tags=${{ steps.meta.outputs.tags }}
            *.labels=${{ steps.meta.outputs.labels }}
      
      - name: Scan Docker images for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository }}:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
